<project name="tinyos" default="all">
	<!--
		Pleaser refer to tossim-ugly-branch 
		in order to have radio working on tossim,
		the main problem with tossim is that it simply creates a
		single thread for all the nodes, so all the memory locations are pointing 
		to the same places for all nodes,
		
		however, if you just want to test the other stuff than radio on tossim you
		can still use the following instructions
		
		in order to run tossim you have to first export 
		PYTHON_LIBS
		you can do that by editing env.sh appropriately to your computer setting
		and then by typing
									. env.sh
		in the command line
		then by calling
									 ant run
		you will be able to see the program running in Tossim\
		
		NOTE: in the testsuite if the no. of Threads exceeds 7,
		testsuite stops, this could be a shortcoming in Tossim 									
	-->
	
	<!-- include native code for libraries -->
	<property name="libs" value="base, darjeeling, radio"/>
	<property name="apps" value="ctp"/>

	<!-- Platform and architecture selection -->
	<property name="platform" value="tinyos-tossim"/>
	<property name="architecture" value="tossim"/>
	<property name="configuration" value="tos-tossim"/>
	
	<!-- Architecture specific stuff -->
	<property name="mcu" value="atmega128"/>
	<property name="TOS_MCU" value="atmega128"/>
	<property name="TOS_PLATFORM" value="TOSSIM"/>
	<property name="TOS_GCC" value="avr-gcc"/>
	<property name="TOS_TARGET" value="avr"/>
	<property name="TOS_CHIP" value="atm128"/>

	<!-- Import the rest from config.xml (magic) -->
	<import file="../config.xml"/>
	
	<target name="run" depends="all">
		<exec executable="python">
			<arg value="tester.py"/>
		</exec>
	</target>
	
	
</project>
