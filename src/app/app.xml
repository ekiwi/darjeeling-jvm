<project name="app" default="all">

	<!-- Obtain absolute paths to the app directory, and the home directory of the application being built -->
	<dirname property="apppath" file="${ant.file.app}"/>	
	<dirname property="buildtargetpath" file="${ant.file}"/>
	
	<!-- Directories and file names -->
	<property name="build" value="${buildtargetpath}/build"/>
	<property name="classes" value="${build}/class"/>
	<property name="jar" value="${build}/${name}.jar"/>
	<property name="java-src" value="${buildtargetpath}/java"/>
	<property name="doc" value="${buildtargetpath}/doc"/>

	<!-- Include taskdef for the Infuser tool -->
	<import file="${apppath}/../taskdefs.xml"/>
		
	<!-- We must not compile against the JRE libraries, but use out own base library instead (contains java.lang, among other things) -->
	<property name="bootclasspath" value="${apppath}/../lib/base/build/base.jar"/>

	<!-- If lib-depends hasn't been defined yet, default to none -->
	<property name="lib-depends" value=""/>
    <!-- ... the same to java-src-include -->
    <property name="java-src-include" value=""/>

	<!-- Convert the comma separated list of library names (ie 'base, darjeeling') to a space separated list of .dih files off the library dir -->
	<pathconvert property="infuser-headers" pathsep=" ">
		<filelist dir="/" files="${lib-depends}"/>
		<regexpmapper from="\${file.separator}(.*)" to="\1/build/\1.dih"/>
	</pathconvert>

	<!-- Convert the comma separated list of library names (ie 'base, darjeeling') to a space separated list of .jar files off the library dir -->
	<pathconvert property="javac-classpath" pathsep=" ">
		<filelist dir="/" files="${lib-depends}"/>
		<regexpmapper from="\${file.separator}(.*)" to="\1/build/\1.jar"/>
	</pathconvert>
	
	<!-- Meta-target -->
	<target name="all" depends="compile-java, package, infuse"/>
	
	
	<apply executable="ls">
		<filelist files="${javac-classpath}" dir="${apppath}/../lib/"/>
	</apply>

	<!-- compile the java sources -->
	<target name="compile-java">
		<mkdir dir="${classes}"/>
		<javac
			srcdir="${java-src}"
			destdir="${classes}"
			source="1.5"
			debug="true"
			encoding="iso-8859-1"		
			bootclasspath="${bootclasspath}"
            includes="${java-src-include}"
			excludes="${java-src-exclude}"
		>
			<classpath>
				<filelist files="${javac-classpath}" dir="${apppath}/../lib/"/>
			</classpath>
		</javac>
	</target>

	<!-- package the code into a single .jar file -->
	<target name="package" depends="compile-java"> 
		<mkdir dir="${build}"/>
		<jar destfile="${jar}"> 
			<fileset dir="${classes}"><include name="**/*.class"/></fileset>
		</jar>
	</target>

	<!-- infuse the java code -->
	<target name="infuse" depends="compile-java"> 
		<infuser
			name="${name}"
			infusionfile="${build}/${name}.di"
			headerfile="${build}/${name}.dih"
			hfile="${build}/${name}.h"
		>
			<!-- Include the classes -->
			<fileset dir="${classes}" ><include name="**/*.class"/></fileset>
			
			<!-- include .dih files -->
			<filelist files="${infuser-headers}" dir="${apppath}/../lib/"/>
		</infuser>
	</target>

	<!-- generate javadoc documentation -->
	<target name="doc">
		<mkdir dir="${doc}"/>
		<javadoc
			sourcepath="${src}"
			destdir="${doc}"
			classpath="${bcelpath}"
		>
		</javadoc>
	</target>

	<!-- clean -->
	<target name="clean">
		<delete dir="${build}"/>
		<delete file="${jar}"/>
		<delete dir="${doc}"/>
	</target>

</project>
