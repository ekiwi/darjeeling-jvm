<project>

	<import file="../../taskdefs.xml"/>

	<target name="all" depends="compile"/>
		<target name="embeddedloader">
		<echo message="${infusions} ${nativeinfusions} ${run}"/>
		<embeddedloader
			infusions="${infusions}"
			nativeinfusions="${nativeinfusions}"
			run="${run}"
			cfile="${vm.generated}/loader.c"
			hfile="${vm.generated}/loader.h"
			avr="true"
			/>
	</target>

	<target name="compile" depends="embeddedloader">
		<mkdir dir="${vm.objects}/${distro}"/>
		<mkdir dir="${vm.executables}/${distro}"/>
		<cc objdir="${vm.objects}/${distro}" debug="false">

			<compiler classname="net.sf.antcontrib.cpptasks.gcc.cross.GccCCompiler">
				<compilerparam value="avr" name="target"/>
				<compilerarg value="-DFOS_PLATFORM_${fos_platform}"/>
				<compilerarg value="-DNODEID=${nodeid}"/>
				<compilerarg value="-DRF_CHANNEL=${rf_channel}"/>
				<compilerarg value="-mmcu=${mmcu}"/>
				<compilerarg value="-Os"/>
				<compilerarg value="-finline-functions"/>
				<compilerarg value="-Wall"/>
			</compiler>

			<!-- include directories -->
			<includepath>
				<pathelement path="${env.FOSROOT}/src/include/"/>
				<pathelement path="${lib.generated}"/>
				<pathelement path="${app.generated}"/>
				<pathelement path="${vm.base}"/>
				<pathelement path="${vm.base}/cpu/${cpu}"/>
				<pathelement path="${vm.base}/platform/${platform}"/>
				<pathelement path="${vm.base}/distro/${distro}"/>
			</includepath>
			
			<!-- input files -->
			<fileset dir="${vm.base}/common"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/cpu/${cpu}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/platform/${platform}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/distro/${distro}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.opt}"><patternset refid="opt"/></fileset>
			<fileset dir="${vm.generated}"><include name="loader.c"/></fileset>

		</cc>

		<cc outfile="${vm.executables}/${distro}/darjeeling.elf" 
	        objdir="${vm.objects}/${distro}"
	        debug="false">

			<linker classname="net.sf.antcontrib.cpptasks.gcc.cross.GccLinker">
				<linkerparam value="avr" name="target"/>
				<linkerarg value="-Wl,--cref,-Map,darjeeling-avr.map,--section-start=.bootloader=0x1e000"/>
				<linkerarg value="-mmcu=${mmcu}"/>
			</linker>

			<libset libs="fos" dir="${env.FOSROOT}/src/${fos_platform}/" />
			<libset libs="c" />

			<fileset dir="${vm.objects}/${distro}/">
				<include name="*.o"  />
			</fileset>
		</cc>
	</target>

	<target name="run" depends="compile">
		<!-- create srec file -->
		<exec executable="avr-objcopy">
			<arg value="-R"/>
			<arg value="-S"/>
			<arg value="--target=srec"/>
			<arg value="${vm.executables}/${distro}/darjeeling.elf"/>
			<arg value="${vm.executables}/${distro}/darjeeling.srec"/>
		</exec>
		
		<!-- create bin file -->
		<exec executable="avr-objcopy">
			<arg value="-R"/>
			<arg value="-S"/>
			<arg value="-O"/>
			<arg value="binary"/>
			<arg value="${vm.executables}/${distro}/darjeeling.elf"/>
			<arg value="${vm.executables}/${distro}/darjeeling.bin"/>
		</exec>
		
		<!-- flash the srec with avrdude -->
		<exec executable="avrdude">
			<arg value="-p"/>
			<arg value="${avrdude.mmcu}"/>
			<arg value="-P"/>
			<arg value="usb"/>
			<arg value="-c"/>
			<arg value="avrispv2"/>
			<arg value="-U"/>
			<arg value="hfuse:w:0xd9:m"/>
			<arg value="-U"/>
	 		<arg value="flash:w:${vm.executables}/${distro}/darjeeling.srec"/>
		</exec>
	</target>

</project>
