<!-- compile targets for arn/gba builds using devkitarm/libgba -->
<project>
	
	<import file="../../taskdefs.xml"/>

	<target name="all" depends="compile"/>

	<target name="embeddedloader">
		<embeddedloader
			infusions="${infusions}"
			nativeinfusions="${nativeinfusions}"
			run="${run}"
			cfile="${vm.generated}/loader.c"
			hfile="${vm.generated}/loader.h"
			/>
	</target>

	<target name="compile" depends="embeddedloader">

		<mkdir dir="${vm.objects}/${distro}"/>
		<mkdir dir="${vm.executables}/${distro}"/>
			
		<cc objdir="${vm.objects}/${distro}" debug="false">
		
			<compiler classname="net.sf.antcontrib.cpptasks.gcc.cross.GccCCompiler">
				<compilerparam value="arm-eabi" name="target"/>
				<!--
				<compilerarg value="-MMD"/>
				<compilerarg value="-MP"/>
				<compilerarg value="-MF"/>
				-->
				<compilerarg value="-g"/>
				<compilerarg value="-Wall"/>
				<compilerarg value="-O1"/>
				<compilerarg value="-finline-functions"/>
				<compilerarg value="-mcpu=arm7tdmi"/>
				<compilerarg value="-mtune=arm7tdmi"/>
				<compilerarg value="-fomit-frame-pointer"/>
				<compilerarg value="-ffast-math"/>
				<compilerarg value="-mthumb"/>
				<compilerarg value="-mthumb-interwork"/>
			</compiler>

			<!-- include directories -->
			<includepath>
				<pathelement path="${env.DEVKITPRO}/libgba/include/"/>
				<pathelement path="${lib.generated}"/>
				<pathelement path="${app.generated}"/>
				<pathelement path="${vm.base}"/>
				<pathelement path="${vm.base}/cpu/${cpu}"/>
				<pathelement path="${vm.base}/platform/${platform}"/>
				<pathelement path="${vm.base}/distro/${distro}"/>
			</includepath>
			
			<!-- input files -->
			<fileset dir="${vm.base}/common"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/cpu/${cpu}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/platform/${platform}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.base}/distro/${distro}"><include name="**/*.c"/></fileset>
			<fileset dir="${vm.opt}"><patternset refid="opt"/></fileset>
			<fileset dir="${vm.generated}"><include name="loader.c"/></fileset>
		</cc>

		<cc objdir="${vm.objects}/${distro}"
			outfile="${vm.executables}/${distro}/darjeeling.elf"
			debug="false"
			>

			<linker classname="net.sf.antcontrib.cpptasks.gcc.cross.GccLinker">
				<linkerparam value="arm-eabi" name="target"/>
				<linkerarg value="-g"/>
				<linkerarg value="-specs=gba.specs"/>
				<linkerarg value="-mthumb"/>
				<linkerarg value="-mthumb-interwork"/>
			</linker>

			<libset libs="gba" dir="${env.DEVKITPRO}/libgba/lib" />
			
			<fileset dir="${vm.objects}/${distro}/">
				<include name="*.o"  />
			</fileset>
		</cc>

		<!-- create srec file -->
		<exec executable="${env.DEVKITARM}/bin/arm-eabi-objcopy">
			<arg value="-O"/>
			<arg value="binary"/>
			<arg value="${vm.executables}/${distro}/darjeeling.elf"/>
			<arg value="${vm.executables}/${distro}/darjeeling.gba"/>
		</exec>
		
		<!-- create srec file -->
		<exec executable="${env.DEVKITARM}/bin/gbafix">
			<arg value="${vm.executables}/${distro}/darjeeling.gba"/>
		</exec>
		
	</target>

	<target name="run" depends="compile">
		<exec executable="/home/niels/opt/vgba/vgba32">
			<arg value="build/vm/gameboy_advance/darjeeling.gba"/>
		</exec>	
	</target>

</project>
