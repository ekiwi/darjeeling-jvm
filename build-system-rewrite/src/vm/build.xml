<!-- compile targets for generic GCC builds -->
<project name="vm" default="all">

	<dirname property="vmpath" file="${ant.file.vm}"/>
	
	<property name="architecture" value="native"/>
	<property name="platform" value="posix"/>
	<property name="configuration" value="native"/>
	
	<property name="src" value="${vmpath}/c"/>
	<property name="build" value="${vmpath}/build"/>
	<property name="objectfiles" value="${build}/${configuration}/o"/>

	<import file="../architecture/${architecture}/compiler.xml"/>
	<import file="../platform/${platform}/platform.xml"/>
	
	<target name="all" depends="compile, ar"/>
		
	<target name="compile">
		<platform-compile objectfiles="${objectfiles}">
			<compile-elements>
				
				<defineset refid="platform-defines"/>
				
				<!-- include directories -->
				<includepath>
					<pathelement path="${src}"/>
					<pathelement path="${vmpath}/../architecture/${architecture}/c"/>
					<pathelement path="${vmpath}/../platform/${platform}/c"/>
					<pathelement path="${vmpath}/../config/${configuration}/c"/>
					<pathelement path="${vmpath}/../lib/base/build"/>
					<pathelement path="${vmpath}/../lib/darjeeling/build"/>
					<path refid="platform-includes"/>
				</includepath>
		
				<!-- input files -->
				<fileset dir="${src}"><include name="**/*.c"/></fileset>
				<fileset dir="${vmpath}/../architecture/${architecture}/c"><include name="**/*.c"/></fileset>
				
			</compile-elements>
		</platform-compile>
	</target>
	
	<target name="ar">
		
	    <pathconvert property="objectfilestring" pathsep=" ">
		<path>
		    <fileset dir="${objectfiles}" includes="**/*.o"/>
		</path>
	    </pathconvert>
	    	
    	<mkdir dir="${build}/${configuration}/"/>
	    <exec executable="ar">
	    	<arg line="rcs ${build}/${configuration}/vm.a ${objectfilestring}"/>
	    </exec>
	
	</target>
	
	<!-- clean -->
	<target name="clean">
		<delete dir="${build}"/>
	</target>

</project>
