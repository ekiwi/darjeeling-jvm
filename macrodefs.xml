<project name="macros">

	<property file="darjeeling.properties"/>

	<!-- macro for building libraries -->
	<macrodef name="library">
		<attribute name="dir" default="NOT SET"/>
		<attribute name="target" default="all"/>
		<sequential>
			<ant antfile="${lib.base}/@{dir}/lib.build.xml" target="@{target}"/>
		</sequential>
	</macrodef>

	<!-- macro for building applications -->
	<macrodef name="application">
		<attribute name="dir" default="NOT SET"/>
		<attribute name="target" default="all"/>
		<sequential>
			<ant antfile="${app.base}/@{dir}/app.build.xml" target="@{target}"/>
		</sequential>
	</macrodef>

	<!-- macro for building applications -->
	<macrodef name="distro">
		<attribute name="distro" default="NOT SET"/>
		<attribute name="target" default="all"/>
		<attribute name="infusions" default="base"/>
		<attribute name="nativeinfusions" default="base"/>
		<attribute name="run" default=""/>
		<sequential>
			<ant antfile="${vm.base}/distro/@{distro}/vm.build.xml" target="@{target}">
				<property name="infusions" value="@{infusions}"/>
				<property name="nativeinfusions" value="@{nativeinfusions}"/>
				<property name="run" value="@{run}"/>
			</ant>
		</sequential>
	</macrodef>

	<!-- script for parsing a comma-separated list of names -->
	<!--
	<macrodef name="custom">
		<attribute name="libs" default="base"/>
		<attribute name="apps" default="blink"/>
		<attribute name="distros" default="linux"/>
		<attribute name="target" default="all"/>
		<sequential>
			<script language="rhino"><![CDATA[
				
				String.prototype.splitCommaSeparated = function()
				{
					// trim the string
					trim = this.replace(/^\s+|\s+$/g,'');

					if (trim.length==0)
						return null;
	
					// split on comma, remove any whitespace before and after the comma
					return trim.split(/\s*,\s*/g);
				}

				libBase = base.getProperty("lib.base");
				appBase = base.getProperty("app.base");
				vmBase = base.getProperty("vm.base");

				ant = base.createTask("ant");
				ant.setTarget("@{target}");
				ant.setInheritAll(true);

				// build libraries
				names = "@{libs}".splitCommaSeparated();
				if (names!=null) for (i in names)
				{
					// create a library task and build the application
					ant.setAntfile(libBase + "/" + names[i] + "/lib.build.xml");
					ant.perform();
				}

				// build applications
				names = "@{apps}".splitCommaSeparated();
				if (names!=null) for (i in names)
				{
					// create an application task and build the application
					ant.setAntfile(appBase + "/" + names[i] + "/app.build.xml");
					ant.perform();
				}

				// build vms
				names = "@{distros}".splitCommaSeparated();
				if (names!=null) for (i in names)
				{
					// create an application task and build the application
					ant.setAntfile(vmBase + "/distro/" + names[i] + "/vm.build.xml");
					ant.perform();
				}

			]]></script>
		</sequential>
	</macrodef>
	-->

</project>
